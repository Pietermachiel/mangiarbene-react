{"version":3,"sources":["components/common/common.js","components/Home/index.js","components/Posts/index.js","components/Posts/Post/index.js","components/Recipes/index.js","components/Recipes/Recipe/index.js","components/Books/index.js","components/Books/Book/index.js","components/Nav.js","components/Footer.js","components/Test.js","App.js","serviceWorker.js","index.js"],"names":["slugify","text","toString","toLowerCase","replace","truncate","str","length","ending","substring","props","books","recipes","posts","className","src","alt","to","aria-label","href","target","rel","filter","post","id","map","date","Date","Fragment","key","title","category","getDate","getMonth","getFullYear","recipe","index","product","bookId","bookTitle","book","year","author","match","url","hit","truncatetext","content","parsedPostContent","ReactHtmlParser","useState","thepost","setThePost","API","params","useEffect","a","fetch","json","then","res","getData","console","log","r","dish","b","parsedBookContent","_","sortBy","kitchen","publisher","link","_id","withRouter","isOn","setIsOn","toggle","Helmet","onClick","nav","thenav","location","pathname","Footer","Test","state","thebook","this","setState","Component","apiEndpoint","App","path","component","exact","render","Home","Books","find","Book","Recipes","Recipe","Posts","Post","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","document","app","ReactDOM","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.21b9270e.chunk.js","sourcesContent":["export function afgerond(prijs) {\n    return Number.parseFloat(prijs).toFixed(2);\n}\n\nexport function slugify(text) {\n    return text.toString().toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/\\.+/g, '')\n    .replace(/’+/g, '-')\n    .replace(/é+/g, 'e')\n    .replace(/'+/g, '-');\n}\n\nexport function uppercase(text) {\n    return text.toUpperCase();\n}\n\nexport function lowercase(text) {\n    return text.toLowerCase();\n}\n\nexport function capitalize(s) {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport function truncate (str, length, ending) {\n    if (length == null) {\n      length = 100;\n    }\n    if (ending == null) {\n      ending = '...';\n    }\n    if (str.length > length) {\n      return str.substring(0, length - ending.length) + ending;\n    } else {\n      return str;\n    }\n  };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import _ from 'lodash';\nimport { slugify } from \"../common/common\";\n\nexport default (props) => {\n  const { books, recipes, posts } = props;\n\n  // const recipeNumber = recipes.length;\n  // var recipeRandom = _.random(recipeNumber, true);\n  // recipeRandom = Math.floor(recipeRandom);\n\n  // const bookNumber = books.length;\n  // var bookRandom = _.random(bookNumber, true);\n  // bookRandom = Math.floor(bookRandom);\n\n  return (\n    <div className=\"home\">\n      <div className=\"home-img_artisjok\">\n        <img src=\"/img/artisjok.jpg\" alt=\"\" />\n        <div className=\"theart\">\n          <Link\n            to={`/books/${slugify(\n              \"Science in the Kitchen and the Art of Eating Well\"\n            )}`}\n            aria-label=\"The art of eating well\"\n          >\n            The art of eating well\n          </Link>\n        </div>\n      </div>\n      <div className=\"home-quote\">\n        <p>\n          \"Cooking is a troublesome sprite. Often it may drive you to despair.\n          Yet it is also very rewarding, for when you do succeed, or overcome a\n          difficulty in doing so, you feel the satisfaction of a great triumph.{\" \"}\n          <br />\n          <br /> If you do not aspire to become a premier cook, you do not need\n          to have been born with a pan on your head to become a good one.{\" \"}\n          <span>\n            Passion, care, and precision of method will generally suffice; then,\n            of course, you must use the finest ingredients as your raw\n            materials, for these will make you shine.\n          </span>\n          \"\n        </p>\n        <br />\n        <p className=\"pellegrino\">\n          <b>Pellegrino Artusi</b>\n          <Link\n            to={`/books/${slugify(\n              \"Science in the Kitchen and the Art of Eating Well\"\n            )}`}\n          >\n            – Science in the Kitchen and the Art of Eating Well\n          </Link>\n        </p>\n      </div>\n      <hr />\n      <br />\n\n      <h3 className=\"blauw\">\n        Note to the reader – <span className=\"smaller\">React version</span>\n      </h3>\n      <div className=\"blog-post kramdown\">\n        <blockquote>\n          <p>\n            {\" \"}\n            This website demonstrates the <strong>\n              MangiarBene React\n            </strong>{\" \"}\n            version of the project <strong>Jekyll as API endpoint</strong>,\n            accompaning{\" \"}\n            <a\n              href=\"https://jekyllconf.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"api.roozen.nl\"\n            >\n              JekyllConf2019\n            </a>{\" \"}\n            on this issue. The{\" \"}\n            <a\n              href=\"https://jekyllrb.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"api.roozen.nl\"\n            >\n              Jekyll\n            </a>{\" \"}\n            content is to be concidered as fake, exept for the{\" \"}\n            <a\n              href=\"/development/2019/09/16/jekyll-api-endpoint-demo.html\"\n              aria-label=\"Last post\"\n            >\n              latest post\n            </a>\n            , which contains the explanation of the demo. The fake Jekyll{\" \"}\n            <strong>recipe</strong> and <strong>book</strong> markup documents\n            are stored as objects as well and made available as REST api\n            endpoints. In Jekyll endpoints it is only possible to use the GET\n            request, which makes sense because Jekyll is a static website\n            generator in the first place. Consequently there are no dynamic\n            endpoints available, and therefore no possiblilty to change the\n            content this way.\n          </p>\n        </blockquote>\n        <blockquote>\n          <p>\n            The API endpoints are beiing consumed in this actual{\" \"}\n            <a\n              href=\"https://reactjs.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"api.roozen.nl\"\n            >\n              Reactjs\n            </a>{\" \"}\n            application. As you will experience and to demonstrate the working\n            and purpose of the Jekyll API endpoints this{\" \"}\n            <strong>MangiarBene React</strong> website is designed almost\n            exactly the same way as the{\" \"}\n            <strong>\n              <a\n                href=\"https://mangiarbeneapi.roozen.nl\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                aria-label=\"mangiarbeneapi.roozen.nl\"\n              >\n                MangiarBene Jekyll\n              </a>\n            </strong>{\" \"}\n            website.\n          </p>\n        </blockquote>\n        <blockquote>\n          <p>\n            You will find the explanation of the project in the{\" \"}\n            <a\n              href=\"/development/2019/09/16/jekyll-api-endpoint-demo.html\"\n              aria-label=\"Last post\"\n            >\n              latest post\n            </a>\n            .\n          </p>\n        </blockquote>\n      </div>\n\n      {/* latest post */}\n      <p className=\"pl-2em\">latest post</p>\n      {posts\n        .filter((post, id) => id === 0)\n        .map((post, id) => {\n          const date = new Date(post.date);\n          // if (id === 0 && hit === \"latest\")\n          return (\n            <React.Fragment key={id}>\n              <div className=\"blog blog-post\">\n                <Link\n                  to={`/posts/${slugify(post.title)}`}\n                  aria-label=\"Last post\"\n                >\n                  <h3>{post.title}</h3>\n                </Link>\n                <p className=\"summary\">\n                  {post.category}\n                  <span className=\"date\">\n                    &nbsp;{date.getDate()}/{date.getMonth()}/\n                    {date.getFullYear()}\n                  </span>\n                </p>\n              </div>\n            </React.Fragment>\n          );\n        })}\n      {/* recipe of the day */}\n      <p className=\"pl-2em\">recipe of the day</p>\n      {recipes\n        .filter((recipe, id) => id === 3)\n        .map((recipe) => {\n          return (\n            <div key={recipe.index} className=\"recipe\">\n              <Link\n                to={`/recipes/${slugify(recipe.title)}`}\n                aria-label=\"Recipe of the day\"\n              >\n                <h3>\n                  {recipe.title} {recipe.index}\n                </h3>\n              </Link>\n              <div className=\"credits\">\n                <h5>\n                  {recipe.product}\n                  <span>\n                    <Link to={`/books/${recipe.bookId}`}>\n                      &nbsp;&nbsp;{recipe.bookTitle}\n                    </Link>\n                  </span>\n                </h5>\n              </div>\n            </div>\n          );\n        })}\n      {/* book of the day */}\n      <p className=\"pl-2em\">book of the day</p>\n      {books\n        .filter((book, id) => id === 3)\n        .map((book) => {\n          return (\n            <div key={book.index} className=\"book\">\n              <Link to={`/books/${book.id}`} aria-label=\"Book of the day\">\n                <h3>\n                  <span>{book.year}</span> {book.title}\n                </h3>\n              </Link>\n              <div className=\"credits\">\n                <h5>{book.author}</h5>\n              </div>\n            </div>\n          );\n        })}\n      {/* database */}\n      <p className=\"pl-2em\">database</p>\n      <div className=\"home-database\">\n        <Link to=\"/recipes\" className=\"nav-link\" aria-label=\"Recipes\">\n          <h3>{recipes.length} recipes </h3>\n        </Link>\n        <Link to=\"/books\" className=\"nav-link\" aria-label=\"Books\">\n          <p>{books.length} books</p>\n        </Link>\n      </div>\n\n      {/* website */}\n      <p className=\"pl-2em\">Jekyll website</p>\n      <a\n        href=\"https://trim-seahorse.cloudvent.net\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        aria-label=\"Hosted at CloudCannon\"\n      >\n        hosted at CloudCannon\n      </a>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { truncate } from '../common/common';\nimport ReactHtmlParser from 'react-html-parser';\n\nexport default ({ match: { url }, posts }) => {\n    \n    const category = [\"latest\", \"archive\"]\n\n    return (\n        <div>\n            <div className=\"blog\">\n            {category.map((hit, id) => {\n                return (\n                    <React.Fragment key={id}>\n                    <p className=\"post-chapeau\">{hit}</p>\n                    {posts\n                    .filter((post, id) => id === 0 && hit === \"latest\")\n                    .map((post, id) => {\n                        const date = new Date(post.date);\n                        const truncatetext = truncate(post.content, 307);\n                        const parsedPostContent = ReactHtmlParser(truncatetext);\n                        // if (id === 0 && hit === \"latest\") \n                        return (\n                            <React.Fragment key={id}>\n                            <div className=\"blog-post\">\n                            <Link to={`/posts/${post.id}`}>\n                                <h3>\n                                    { post.title }   \n                                </h3> \n                            </Link>        \n                            <p className=\"summary\">\n                                { post.category }\n                                <span className=\"date\">\n                                    &nbsp;{ date.getDate() }/{ date.getMonth() }/{ date.getFullYear() }\n                                </span>\n                            </p>\n                            { parsedPostContent }   \n                            </div>                                    \n                            </React.Fragment> \n                        )\n                    }\n                    )}       \n                    {posts\n                    .filter((post, id) => id !== 0 && hit === \"archive\")\n                    .map((post, id) => {\n                        const date = new Date(post.date);\n                        return (\n                            <React.Fragment key={id}>\n                            <div className=\"blog-post\">\n                            <Link to={`/posts/${post.id}`}>\n                                <h3>\n                                    { post.title }   \n                                </h3> \n                            </Link>        \n                            <p className=\"summary\">\n                                { post.category }\n                                <span className=\"date\">\n                                    &nbsp;{ date.getDate() }/{ date.getMonth() }/{ date.getFullYear() }\n                                </span>\n                            </p>\n                            </div>                                    \n                            </React.Fragment> \n                        )\n                    }\n                    )}                           \n                    </React.Fragment>\n                )\n            }\n            )}\n            </div>\n        </div>\n    )\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nexport default (props) => {\n  var [thepost, setThePost] = useState([]);\n\n  const API = props.match.params.id;\n  const date = new Date(thepost.date);\n  const parsedPostContent = ReactHtmlParser(thepost.content);\n\n  useEffect(() => {\n    async function getData() {\n      const res = await fetch(\n        `https://mangiarbeneapi.roozen.nl/api/blog/${API}.json`\n      );\n      res.json().then((res) => setThePost(res));\n    }\n    getData();\n  }, [API]);\n\n  console.log(\"thepost\");\n  console.log(thepost);\n\n  return (\n    <React.Fragment>\n      <div className=\"layout-blog\">\n        <h2>{thepost.title}</h2>\n      </div>\n      <p>\n        <a\n          className=\"pieterroozen\"\n          href=\"https://roozen.nl\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {thepost.author}\n        </a>{\" \"}\n        – {date.getDate()}/{date.getMonth()}/{date.getFullYear()}\n      </p>\n      <div className=\"blog\">\n        <div className=\"blog-post kramdown\">{parsedPostContent}</div>\n      </div>\n      <div className=\"blog-links\">\n        {thepost.book !== \"\" ? <p>book</p> : null}\n        <Link to={`/books/${thepost.bookId}`}>\n          <h5>{thepost.book}</h5>\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default ({ match: { url }, recipes }) => {\n\n        const dishes = [\"starter\", \"aside\", \"main\", \"desert\", \"basics\"]\n\n        return (\n            <div>\n                <div className=\"recipes\">\n                {dishes.map(hit => {\n                    return (\n                        <React.Fragment key={hit}>\n                        <p className=\"dish-title\">{hit}</p>\n                        {recipes\n                        .filter(r => hit === r.dish)\n                        .map(({ title, id, index, book, product, bookTitle, bookId }) => {                      \n                            return (\n                           <div key={id} className=\"recipe\">\n                            <Link to={`/recipes/${id}`}>\n                                <h3>{ title} { index }</h3> \n                            </Link>        \n                                <div className=\"credits\">\n                                    <h5>\n                                        { product }\n                                        <span>\n                                            <Link to={`/books/${bookId}`}>\n                                            &nbsp;&nbsp;{bookTitle}\n                                            </Link>\n                                        </span>\n                                    </h5>\n                                </div>        \n                            </div>    \n                            )\n                        }\n                        )}                            \n                        </React.Fragment>\n                    )\n                }\n                )}\n                </div>\n            </div>\n        )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { truncate } from \"../../common/common\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nexport default (props) => {\n  return (\n    <React.Fragment>\n      <div className=\"recipes layout-recipes\">\n        <h1 className=\"mb-0\">{props.title}</h1>\n      </div>\n      <div className=\"recipe-recipe\">\n        <div className=\"recipe-recipe_ingredients\">\n          <span>ingredients</span>\n          <p>You must use</p>\n          <p>The finest </p>\n          <p>Ingredients</p>\n        </div>\n        <div className=\"recipe-recipe_method\">\n          <span>method</span>\n          <ol>\n            <li>He</li>\n            <li>Ho</li>\n            <li>Let's go</li>\n          </ol>\n        </div>\n      </div>\n      <br />\n      <hr />\n      <Link className=\"zwart\" to={`/books/${props.bookId}`}>\n        <div className=\"recipe-box\">\n          <div className=\"recipe-box_image\">\n            <img src={`/img/books/${props.bookId}_title.jpg`} alt=\"\" />\n          </div>\n          <div className=\"recipe-box_credits\">\n            {props.books\n              .filter((b) => b.id === props.bookId)\n              .map((book) => {\n                const truncatetext = truncate(book.content);\n                const parsedBookContent = ReactHtmlParser(truncatetext);\n                // if (props.bookId === book.id )\n                return (\n                  <React.Fragment key={book.index}>\n                    <h6>{book.title}</h6>\n                    <p>{book.author}</p>\n                    {parsedBookContent} <span>Read more ></span>\n                  </React.Fragment>\n                );\n              })}\n          </div>\n        </div>\n      </Link>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nexport default ({ match: { url }, books }) => {\n\n    const kitchen = [\n        \"italian\", \"dutch\", \"spanish\", \"oriental\", \"english\", \"usa\"\n    ]\n    books = _.sortBy(books, ['year']);\n    \n    return (\n        <div>\n            <div className=\"books\">\n            {kitchen.map(hit => {\n                return (\n                    <React.Fragment key={hit}>\n                    <p className=\"kitchen-title\">{hit}</p>\n\n                    {books\n                    .filter(b => hit === b.kitchen)\n                    .map(book => \n                        <div key={book.index} className=\"book\">\n                        <Link to={`/books/${book.id}`}>\n                            <h3>\n                                <span>{ book.year}</span> { book.title }\n                            </h3> \n                        </Link>        \n                            \n                            <h5>{ book.author }</h5>\n                                    \n                        </div>\n                    )}                            \n                    </React.Fragment>\n                )\n            }\n            )}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nexport default (props) => {\n  var parsedBookContent = ReactHtmlParser(props.content);\n\n  return (\n    <React.Fragment>\n      <div className=\"books layout-books\">\n        <h1>{props.title}</h1>\n      </div>\n      <div className=\"book-box\">\n        <div className=\"book-box_image\">\n          <img src={`/img/books/${props.id}_cover.jpg`} alt=\"\" />\n        </div>\n        <div className=\"book-box_credits\">\n          <h6>{props.author}</h6>\n          <p>\n            {props.publisher} {props.year}\n          </p>\n          <p>Kitchen: {props.kitchen}</p>\n          <p>\n            Source / Read more{\" \"}\n            <Link to=\"{ url }\" target=\"_blank\" rel=\"noopener noreferrer\">\n              &nbsp;{props.link}\n            </Link>\n          </p>\n        </div>\n      </div>\n      <br />\n      <div className=\"book-content\">{parsedBookContent}</div>\n      <p>Recipes</p>\n      <div className=\"book-links\">\n        {props.recipes\n          .filter((r) => r.bookId === props.id)\n          .map(({ id, title, index }, _id) => {\n            return (\n              <Link key={_id} to={`/recipes/${id}`}>\n                <h5>\n                  {title} {index}\n                </h5>\n              </Link>\n            );\n          })}\n      </div>\n    </React.Fragment>\n  );\n};\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet'\nimport { Link, withRouter } from 'react-router-dom';\n\nconst Nav = (props) => {\n    const [isOn, setIsOn] = useState(false);\n\n    const nav = [\"recipes\", \"books\", \"posts\"];\n\n    function toggle() {\n        isOn ? setIsOn(false) : setIsOn(true);\n    }\n\n    // console.log(props.location.pathname);\n\n    return (\n    <header>\n        <Helmet>\n          <html className={ isOn ? \"menu-open\" : null } />\n        </Helmet>\n        <nav \n            className={ isOn ? \"navbox\" : \"navbox\"}\n            id=\"nav\"\n        >\n            <button \n                onClick={toggle}\n                className={ isOn ? \"hamburger navbox--menu-open\" : \"hamburger\"} \n                aria-label=\"Open Menu\"\n            >\n                <span></span>\n                <span></span>\n                <span></span>\n            </button>  \t\n            <Link className=\"logo\" to=\"/\">MangiarBene</Link>\n            <div \n                className={ isOn ? `navbox-panel is-visible` : `navbox-panel`} \n                id=\"navPanel\"\n                onClick={toggle}\n                >\n                <ul className=\"navbar\">\n                    {nav.map((nav, id) => {\n                        const thenav = `/${nav}`;\n                        return (\n                        <li \n                            key={id}\n                        >\n                            <Link \n                                className={ thenav === props.location.pathname ? `nav-link active` : `nav-link` }\n                                to={`/${nav}`}\n                            >\n                                {nav}\n                            </Link>\n                        </li>                            \n                        )\n                    })}\n\n                    {/* <li><Link className=\"nav-link\" to=\"/books\">books</Link></li>\n                    <li><Link className=\"nav-link\" to=\"/blog\">blog</Link></li> */}\n                </ul>\n            </div>\n        </nav>         \n    </header>\n\n  )\n}\n  \nexport default withRouter(Nav);","import React from 'react'\n\nconst Footer = () => {\n    return <div className=\"footer\">\n\t\t<div className=\"footer-social\">\n\t\t\t\t<span>Jekyll api-endpoint demo by <a className=\"pieterroozen\" href=\"https://roozen.nl\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Pieter Roozen\">Pieter Roozen</a> – 2019&nbsp;</span>\t\t\t\n\t\t\t<div className=\"footer-social_icons\">\n\t\t\t\t<a href=\"https://github.com/Pietermachiel\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Github Pieter Machiel\">\n\t\t\t\t<span className=\"fa-stack fa\">\n\t\t\t\t<i className=\"fa fa-github fa-stack-2x fa-inverse\"></i>\n\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</div>\t\n\t\t</div>\n</div>\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\nconst apiEndpoint = 'https://trim-seahorse.cloudvent.net/api';\n\nexport default class Test extends Component {\n  state = {\n    thebook: [],\n  }\n\n  async componentDidMount() {\n    const thebook = await (await fetch(`${apiEndpoint}/books/ottolenghi.json`)).json()\n    this.setState({ thebook })\n  }\n\n  render() {\n    const { thebook } = this.state;\n    console.log(thebook);\n    return (\n      <div className='main'>\n        {thebook.title}\n      </div>\n    );\n  }\n}\n\n\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Posts from \"./components/Posts\";\nimport Post from \"./components/Posts/Post\";\nimport Recipes from \"./components/Recipes\";\nimport Recipe from \"./components/Recipes/Recipe\";\nimport Books from \"./components/Books\";\nimport Book from \"./components/Books/Book\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport Test from \"./components/Test\";\n// import { hot } from 'react-hot-loader/root';\n\nconst apiEndpoint = \"https://mangiarbeneapi.roozen.nl/api\";\n\nexport default class App extends Component {\n  state = {\n    books: [],\n    recipes: [],\n    posts: [],\n  };\n\n  async componentDidMount() {\n    const books = await (await fetch(`${apiEndpoint}/books.json`)).json();\n    this.setState({ books });\n    const recipes = await (await fetch(`${apiEndpoint}/recipes.json`)).json();\n    this.setState({ recipes });\n    const posts = await (await fetch(`${apiEndpoint}/blog.json`)).json();\n    this.setState({ posts });\n  }\n\n  render() {\n    const { books, recipes, posts } = this.state;\n    console.log(\"recipes\");\n    console.log(recipes);\n\n    return (\n      <div className=\"main\">\n        <Nav />\n        <Switch>\n          <Route path=\"/test\" component={Test} />\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => (\n              <Home {...props} books={books} recipes={recipes} posts={posts} />\n            )}\n          />\n          {/* Books */}\n          <Route\n            exact\n            path=\"/books\"\n            render={(props) => <Books {...props} books={books} />}\n          />\n          <Route\n            path=\"/books/:id\"\n            render={(props) => {\n              const book = books.find(\n                (book) => book.id === props.match.params.id\n              );\n              return <Book {...props} {...book} recipes={recipes} />;\n            }}\n          />\n          {/* Recipes       */}\n          <Route\n            exact\n            path=\"/recipes\"\n            render={(props) => <Recipes {...props} recipes={recipes} />}\n          />\n          <Route\n            path=\"/recipes/:id\"\n            render={(props) => {\n              const recipe = recipes.find(\n                (recipe) => recipe.id === props.match.params.id\n              );\n              return <Recipe {...props} {...recipe} books={books} />;\n            }}\n          />\n          {/* Posts */}\n          <Route\n            exact\n            path=\"/posts\"\n            render={(props) => <Posts {...props} posts={posts} books={books} />}\n          />\n          <Route\n            path=\"/posts/:id\"\n            render={(props) => {\n              const post = posts.find(\n                (post) => post.id === props.match.params.id\n              );\n              return <Post {...props} {...post} />;\n            }}\n          />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./style.scss\";\nimport App from \"./App\";\nimport ScrollToTop from \"react-router-scroll-top\";\nimport * as serviceWorker from \"./serviceWorker\";\n\ndocument.title = \"MangiarBene\";\n\nconst app = (\n  <BrowserRouter>\n    <ScrollToTop>\n      <App />\n    </ScrollToTop>\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"main\"));\n\n// module.hot.accept();\n\nserviceWorker.register();\n"],"sourceRoot":""}